{"version":3,"sources":["images/chef.png","api/authService.js","components/Map.js","api/addService.js","api/removeService.js","components/Business.js","api/yelp.js","pages/Profile.js","components/PrivateRoute.js","components/Loader.js","pages/Login.js","pages/Signup.js","components/NavBar.js","components/Footer.js","pages/HomePage.js","pages/CityLandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthService","login","payload","a","username","password","service","post","data","signup","isLoggedIn","get","logout","this","axios","create","baseURL","process","withCredentials","Component","addService","addBusiness","id","removeService","removeBusiness","delete","Business","props","addPlace","then","result","setState","showBtn","catch","error","console","removePlace","res","btn","user","places","includes","state","className","name","categories","title","price","rating","src","image_url","alt","type","onClick","api","headers","Authorization","yelpProxy","getRestaurantsByQuery","query","params","location","getRestaurants","userLocation","limit","crossDomain","businesses","map","business","coords","coordinates","Profile","filter","allPlaces","placeId","Promise","all","log","e","err","i","key","protectedRoute","component","rest","render","to","Loader","Login","onChangeHandler","target","value","submitHandler","preventDefault","authService","setUserState","history","push","message","response","onSubmit","onChange","placeholder","Signup","NavBar","chefLogo","width","Footer","useState","setQuery","href","CityLandingPage","amount","match","restaurant","App","getUserLocation","navigator","geolocation","getCurrentPosition","latitude","longitude","YelpService","region","restaurants","setLocation","isLoadingUser","exact","path","HomePage","PrivateRoute","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c2759b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chef.feb48811.png\";","import axios from \"axios\";\n\nexport default class AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      withCredentials: true\n    });\n  }\n\n  login = async payload => {\n    const { username, password } = payload;\n    const { data } = await this.service.post(\"/auth/login\", {\n      username,\n      password\n    });\n    return data;\n  };\n\n  signup = async payload => {\n    const { username, password } = payload;\n    const { data } = await this.service.post(\"/auth/signup\", {\n      username,\n      password\n    });\n    return data;\n  };\n\n  isLoggedIn = async () => {\n    const { data } = await this.service.get(\"/auth/isLoggedIn\");\n    return data;\n  };\n\n  logout = async () => {\n    const { data } = await this.service.get(\"/auth/logout\");\n    return data;\n  };\n}\n","import React, { Component } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\n\nclass Map extends Component {\n  state = {\n    viewport: {\n      width: \"50vw\",\n      height: \"100vh\",\n      latitude: 51.5074,\n      longitude: 0.1278,\n      zoom: 1\n    }\n  };\n  componentDidMount() {\n    this.setUserLocation();\n  }\n\n  setUserLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      let newViewport = {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n        zoom: 13\n      };\n      this.setState({\n        viewport: { ...this.state.viewport, ...newViewport }\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"map\">\n        <ReactMapGL\n          {...this.state.viewport}\n          className=\"mapStyle\"\n          onViewportChange={viewport => this.setState({ viewport })}\n        ></ReactMapGL>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import axios from \"axios\";\n\nexport default class addService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      withCredentials: true\n    });\n  }\n\n  addBusiness = async id => {\n    const { data } = await this.service.post(\"/places\", { id });\n    return data;\n  };\n}\n","import axios from \"axios\";\n\nexport default class removeService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_BASE_URL,\n      withCredentials: true\n    });\n  }\n\n  removeBusiness = async id => {\n    const { data } = await this.service.delete(`/places/${id}`);\n    return data;\n  };\n}\n","import React, { Component } from \"react\";\nimport addService from \"../api/addService\";\nimport removeService from \"../api/removeService\";\n\nclass Business extends Component {\n  constructor(props) {\n    super(props);\n    let btn = true;\n\n    if (props.user) {\n      btn = !props.user.places.includes(this.props.id);\n    }\n    this.state = {\n      places: [],\n      showBtn: btn\n    };\n    this.addService = new addService();\n    this.removeService = new removeService();\n  }\n  addPlace = () => {\n    this.addService\n      .addBusiness(this.props.id)\n      .then(result => {\n        //update user.places\n        this.setState({ showBtn: false });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  removePlace = () => {\n    this.removeService\n      .removeBusiness(this.props.id)\n      .then(res => {\n        //update the state of App.\n        // this.setState({ places: res.places });\n        //state.user.places array will be different\n        this.setState({ showBtn: true });\n        this.props.removePlace(this.props.id);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  /* \n    this.props.user.placesIds.includes(this.props.id) then do stuff\n  */\n  render() {\n    if (!this.props.id) return null;\n    return (\n      <div className=\"business-layout\">\n        <h2>{this.props.name}</h2>\n        <h4>\n          {this.props.categories && this.props.categories[0].title} |{\" \"}\n          {this.props.price} | {this.props.rating}\n        </h4>\n        <img className=\"business-image\" src={this.props.image_url} alt=\"\" />\n        {!this.props.user && (\n          <div>\n            <button\n              className=\"submit\"\n              type=\"submit\"\n              onClick={() => this.addPlace()}\n            >\n              Sign Up or Login | Add to your Food Guide\n            </button>\n          </div>\n        )}\n        {this.props.user && (\n          <div>\n            {this.state.showBtn && (\n              <button\n                className=\"submit\"\n                type=\"submit\"\n                onClick={() => this.addPlace()}\n              >\n                Add to my food guide\n              </button>\n            )}\n            {!this.state.showBtn && (\n              <button\n                className=\"submit\"\n                type=\"submit\"\n                onClick={() => this.removePlace()}\n              >\n                Remove from my food guide\n              </button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/*\n  user might already added this to db.\n  user.favourites = array of id's.\n\n\n*/\n\nexport default Business;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_YELP_URL,\n  headers: {\n    Authorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n  }\n});\n\nconst yelpProxy = axios.create({\n  baseURL: process.env.REACT_APP_PROXY_URL\n});\n\nconst getRestaurants = userLocation => {\n  return api\n    .get(\"/businesses/search\", {\n      params: {\n        limit: 10,\n        categories: \"restaurants\",\n        ...userLocation\n      },\n      crossDomain: true\n    })\n    .then(res => {\n      res.data.businesses.map(business => {\n        return {\n          name: business.name,\n          coords: business.coordinates\n        };\n      });\n    })\n    .catch(error => {\n      console.error(error);\n    });\n};\n\nexport const getRestaurantsByQuery = (query, limit = 30) => {\n  return yelpProxy.get(\"restaurantsPerCity\", {\n    params: {\n      location: query\n    }\n  });\n};\n\nexport const getMyPlaces = id => {\n  return yelpProxy.get(\"businesses/\" + id);\n};\n\n// getMyPlaces(\"PG7ZC1CbMOflvOZ7Vj7bZQ\")\n//   .then(res => {\n//     console.log(res);\n//   })\n//   .catch(err => {\n//     console.log(err);\n//   });\n//${\"https://cors-anywhere.herokuapp.com/\"}\n\nexport default {\n  getRestaurants\n};\n","import React, { Route, Component, createRef } from \"react\";\nimport UploadService from \"../api/uploadService\";\nimport Map from \"../components/Map\";\nimport Business from \"../components/Business\";\nimport { getMyPlaces } from \"../api/yelp\";\nimport AuthService from \"../api/authService\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      places: [],\n      user: null\n    };\n    this.service = new AuthService();\n  }\n\n  async componentDidMount() {\n    const user = await this.service.isLoggedIn();\n\n    const allPlaces = user.places.map(async placeId => {\n      try {\n        const { data } = await getMyPlaces(placeId);\n        return data;\n      } catch (err) {\n        return null;\n      }\n    });\n    Promise.all(allPlaces)\n      .then(res => {\n        console.log(res.filter(e => e));\n        this.setState({ places: res.filter(e => e), user });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  removePlace = id => {\n    //filter out id and set new state with new array;\n    const places = this.state.places.filter(places => {\n      return places.id !== id;\n    });\n    this.setState({ places });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Welcome {this.props.user.username}</h1>\n        {this.state.places.map((id, i) => (\n          <Business\n            key={i}\n            {...id}\n            user={this.state.user}\n            removePlace={this.removePlace}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// the private route is a function that will return a Route component or Redirect.\n// that expects a component, an user an other props.\n// the other props will be set in ...rest (the most important one will be the path definition (the path we see in the browser's navigation))\nconst protectedRoute = ({ component: Component, user, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        //render is a function that checks if the user is passed a long. If not the private route will redirect to \"/\"\n        if (user) {\n          return <Component {...props} user={user} {...rest} />;\n        } else {\n          return <Redirect to=\"/\" />;\n        }\n      }}\n    />\n  );\n};\nexport default protectedRoute;\n","import React from \"react\";\n\nexport default function Loader({ className }) {\n  return (\n    <div className={className}>\n      <div className=\"spinner\"></div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport AuthService from \"../api/authService\";\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      err: null\n    };\n    this.authService = new AuthService();\n  }\n\n  onChangeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = async e => {\n    e.preventDefault();\n    try {\n      const user = await this.authService.login(this.state);\n      this.props.setUserState(user);\n      this.props.history.push(\"/profile\");\n    } catch (err) {\n      let message = err.message;\n      if (err.response) message = err.response.data.message;\n      this.setState({ err: message });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"login\">\n        <p>Hungry to find more of your favorite food? Login now!</p>\n        <form onSubmit={this.submitHandler}>\n          <input\n            onChange={this.onChangeHandler}\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Your username\"\n          />\n          <input\n            onChange={this.onChangeHandler}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Your password\"\n          />\n          <button className=\"submit\" type=\"submit\">\n            Login!\n          </button>\n        </form>\n        {this.state.err && <p className=\"error\">{this.state.err}</p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AuthService from \"../api/authService\";\n\nexport default class Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      err: null\n    };\n    this.authService = new AuthService();\n  }\n\n  onChangeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = async e => {\n    e.preventDefault();\n    try {\n      const user = await this.authService.signup(this.state);\n      this.props.setUserState(user);\n      this.props.history.push(\"/profile\");\n    } catch (err) {\n      let message = err.message;\n      if (err.response) message = err.response.data.message;\n\n      this.setState({ err: message });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"signup\">\n        <p>Want to join our global local food guide community? Sign up now!</p>\n        <form onSubmit={this.submitHandler}>\n          <input\n            onChange={this.onChangeHandler}\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Your username\"\n          />\n          <input\n            onChange={this.onChangeHandler}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Your password\"\n          />\n          <input\n            onChange={this.onChangeHandler}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email address\"\n          />\n          <button className=\"submit\" type=\"submit\">\n            Sign Up\n          </button>\n        </form>\n        {this.state.err && <p className=\"error\">{this.state.err}</p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport chefLogo from \"../images/chef.png\";\nimport { Link } from \"react-router-dom\";\n\n//what is condition\n// and how to make navbar aware of it.\n\nclass NavBar extends Component {\n  render() {\n    if (!this.props.user) {\n      return (\n        <nav>\n          <img className=\"navItem\" src={chefLogo} width=\"2%\" alt=\"\" />\n          <Link className=\"navItem\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"navItem\" to=\"/foodies\">\n            Find Foodies\n          </Link>\n          <Link className=\"navItem\" to=\"/signup\">\n            Sign Up\n          </Link>\n          <Link className=\"navItem\" to=\"/login\">\n            Login\n          </Link>\n        </nav>\n      );\n    } else {\n      return (\n        <nav>\n          <img className=\"navItem\" src={chefLogo} width=\"2%\" alt=\"\" />\n          <Link className=\"navItem\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"navItem\" to=\"/foodies\">\n            Find Foodies\n          </Link>\n          <Link className=\"navItem\" to=\"/profile\">\n            {this.props.user.username}\n          </Link>\n          <Link className=\"navItem\" onClick={this.props.logout} to=\"/\">\n            Logout\n          </Link>\n        </nav>\n      );\n    }\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p className=\"footerItem\">Your Global Local Food Guide © 2019</p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\n\nexport default function({ history, ...props }) {\n  const [query, setQuery] = useState(\"\");\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    if (query) history.push(`/city/${query}`);\n  };\n  console.log(props);\n  return (\n    <div>\n      <form onSubmit={onSubmitHandler} className=\"search\">\n        <h2 className=\"title\">YOUR GLOBAL LOCAL FOOD GUIDE</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search a city\"\n          name=\"city\"\n          onChange={e => setQuery(e.target.value)}\n        ></input>\n        <button type=\"submit\">GO</button>\n        <p>\n          Want to <a href=\"/signup\">Signup?</a>\n        </p>\n      </form>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { getRestaurantsByQuery } from \"../api/yelp\";\nimport Business from \"../components/Business\";\nimport AuthService from \"../api/authService\";\n\nexport default class CityLandingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n      amount: 50,\n      user: null\n    };\n    this.service = new AuthService();\n  }\n\n  async componentDidMount() {\n    let user;\n    try {\n      user = await this.service.isLoggedIn();\n    } catch (err) {\n      user = null;\n    }\n\n    getRestaurantsByQuery(this.props.match.params.query, this.state.amount)\n      .then(res => {\n        this.setState({ businesses: res.data.businesses, user });\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n\n  render() {\n    console.log(this.props.user);\n    return (\n      <div>\n        <h1>Discover {this.props.match.params.query}</h1>\n        {this.state.businesses.map((restaurant, i) => (\n          <Business key={i} {...restaurant} user={this.state.user} />\n        ))}\n      </div>\n    );\n  }\n}\n\n// res.data.businesses.map(business => {\n//   return {\n//     name: business.name,\n//     coords: business.coordinates\n//   };\n// });\n\n{\n  /* \n        <div action=\"\">\n          <h2>How many restaurants do you wanna see?</h2>\n          <input\n            type=\"text\"\n            value={this.state.amountOfBussinesses}\n            name=\"amount\"\n            onChange={e => this.setState({ [e.target.name]: e.target.value })}\n          />\n        </div> */\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AuthService from \"./api/authService\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Profile from \"./pages/Profile\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Loader from \"./components/Loader\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\nimport YelpService from \"./api/yelp\";\nimport HigherOrder from \"./pages/HigherOrder\";\nimport HomePage from \"./pages/HomePage\";\nimport CityLandingPage from \"./pages/CityLandingPage\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      isLoadingUser: true,\n      region: null,\n      restaurants: []\n    };\n    this.authService = new AuthService();\n  }\n\n  getUserLocation = async () => {\n    let location;\n    await navigator.geolocation.getCurrentPosition(async result => {\n      location = {\n        latitude: result.coords.latitude,\n        longitude: result.coords.longitude\n      };\n      const restaurants = await YelpService.getRestaurants(location);\n    });\n  };\n\n  getRestaurants = async () => {\n    const { latitude, longitude } = this.state.region;\n    const userLocation = { latitude, longitude };\n    const restaurants = await YelpService.getRestaurants(userLocation);\n    this.setState({ restaurants });\n  };\n\n  //Every time starts check if user session exists and retrieve user data.\n  async componentDidMount() {\n    let user;\n    let location;\n\n    try {\n      //Making the actual API call.\n      user = await this.authService.isLoggedIn();\n      this.getUserLocation();\n    } catch (err) {\n      user = null;\n    } finally {\n      //Irregardless of the result we want to set state.\n      this.setUserState(user, location);\n    }\n  }\n\n  setUserState = (user, location) => {\n    // If user is loggedIn state will be set with user,\n    // otherwise user will be null.\n    const setLocation = this.state.location ? this.state.location : location;\n\n    this.setState({ user, setLocation, isLoadingUser: false, err: null });\n  };\n\n  logout = async () => {\n    //destroy session.\n    try {\n      await this.authService.logout();\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.setState({ user: null });\n    }\n  };\n\n  render() {\n    const { region, restaurants } = this.state;\n    console.log(\"STATE\", this.state.user);\n    // Initially we do not know yet whether an user is logged in or not so we just return a loader.\n    if (this.state.isLoadingUser)\n      return <Loader className=\"full-screen-loader\" />;\n    return (\n      <div className=\"App\">\n        <NavBar user={this.state.user} logout={this.logout} />\n\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n\n          <Route\n            exact\n            path=\"/city/:query\"\n            render={props => (\n              <CityLandingPage {...props} user={this.state.user} />\n            )}\n          />\n\n          <Route\n            path=\"/login\"\n            render={props => (\n              <Login {...props} setUserState={this.setUserState} />\n            )}\n          />\n          <Route\n            path=\"/signup\"\n            render={props => (\n              <Signup {...props} setUserState={this.setUserState} />\n            )}\n          />\n          <PrivateRoute\n            path=\"/profile\"\n            user={this.state.user}\n            setUserState={this.setUserState}\n            component={Profile}\n          />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}